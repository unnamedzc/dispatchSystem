<?xml version="1.0" encoding="utf-8"?>
<s:Panel title="拖动" xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="250" height="350" added="addedToCom()">
	<fx:Script>
		<![CDATA[
			import Values.GlobalValue;
			
			import com.jeff.dataControler.JpgManager;
			import com.jeff.dataControler.PopUpAlertManager;
			import com.jeff.myEvent.ElementEvent;
			
			import mx.graphics.codec.JPEGEncoder;
			import mx.managers.DragManager;
			
			import spark.events.IndexChangeEvent;
			
			//private var fileArray:ArrayCollection;
			private var imgByteArray:ByteArray 
			[Bindable]
			private var ImageUrl:String;
			//name extend 			
			public var _extendName:String="default.jpg";
			
			private var _dragedImage:Boolean=false;
			
			public var _editMode:uint;//0:增加数据，1：修改数据，2：查看数据,
			protected function addedToCom():void
			{
				if(_editMode!=2){
					addEventListener(NativeDragEvent.NATIVE_DRAG_ENTER, dragEnter);
					addEventListener(NativeDragEvent.NATIVE_DRAG_DROP, dragDrop);		
					//save jpg
					addEventListener(ElementEvent.CREATE_JPG,createJpg);
				}
				//if(imgByteArray)
				//trace("check byteArray:",this,imgByteArray.position)
			}
			
			private function initTex():void
			{
				if(_editMode==2){
					note.text="无图片"
				}
			}
			
			private function dragEnter(e:NativeDragEvent):void
			{
				if(e.clipboard.hasFormat(ClipboardFormats.FILE_LIST_FORMAT))
				{
					DragManager.acceptDragDrop(this);
				}            
			}
			
			private function dragDrop(e:NativeDragEvent):void
			{
				var fileList:Array = e.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
				for each (var file:File in fileList)
				{
					var type:String = file.type.toLowerCase();
					//trace(type);
					if(type == ".jpg" || type == ".jpeg" || type == ".png" ||  type == ".gif" )
					{
							
						ImageUrl=file.nativePath;
						startImage.source=ImageUrl;
						
						_dragedImage=true;
						PopUpAlertManager.getInstance().showLoading(this)
						/* GlobalValue._loadingMask=LoadingTitleWin(PopUpManager.createPopUp(this, LoadingTitleWin,true));	
						PopUpManager.centerPopUp(GlobalValue._loadingMask);	 */		
					}
				}
			}
			
			/*
			点击确定按钮，保存图片及名字
			*/
			private function createJpg(e:ElementEvent):void
			{
				_extendName=JpgManager.getInstance().setJpgPath(e.target.title,e._obj.toString());
				var fl:File 
				if(GlobalValue._debug)
				{
					fl= File.desktopDirectory.resolvePath(_extendName);
				}else
				{
					fl = new File(File.applicationDirectory.nativePath);
					fl = fl.resolvePath(_extendName);
					
					//fl= File.applicationDirectory.resolvePath(_extendName);
					trace("extend:",fl.nativePath);
				}
				var fs:FileStream = new FileStream();
				try{  
					//open file in write mode  
					fs.open(fl,FileMode.WRITE);  
					//write bytes from the byte array  
					fs.writeBytes(imgByteArray);  
					//close the file  
					fs.close();  
				}catch(e:Error){  
					trace(e);  
				} 
				imgByteArray.clear();
			}
			
			/*
			完成加载后将图片缓存到本地  
			*/
			private function saveJpg(e:Event):void
			{				
				var _height:uint=(e.target.content  as Bitmap).height;
				var _width:uint=(e.target.content  as Bitmap).width;
				var bitmapData:BitmapData=new BitmapData(_width,_height);
						
				bitmapData.draw(Image(startImage));
				var jpgenc:JPEGEncoder;
				//var imgByteArray:ByteArray 
				if(_height>500||_width>500){
					var copybitmapData:BitmapData=scaleBitmapData(bitmapData,.5,.5);
					//trace(file.name,bitmapData);
					jpgenc = new JPEGEncoder(30);
					imgByteArray = jpgenc.encode(copybitmapData);
				}else
				{
					jpgenc = new JPEGEncoder(50);
					imgByteArray = jpgenc.encode(bitmapData);
				}
				//				
				/* var fl:File 
				if(GlobalValue._debug)
				{
					fl= File.desktopDirectory.resolvePath(_extendName);
				}else
				{
					fl = new File(File.applicationDirectory.nativePath);
					fl = fl.resolvePath(_extendName);
					
					//fl= File.applicationDirectory.resolvePath(_extendName);
					trace("extend:",fl.nativePath);
				}
				var fs:FileStream = new FileStream();
				try{  
					//open file in write mode  
					fs.open(fl,FileMode.WRITE);  
					//write bytes from the byte array  
					fs.writeBytes(imgByteArray);  
					//close the file  
					fs.close();  
				}catch(e:Error){  
					trace(e);  
				} 
				imgByteArray.clear(); */
				//加载完成，隐藏mask
				if(GlobalValue._loadingMask)
				{
					GlobalValue._loadingMask.dispatchEvent(new ElementEvent("update"));
				}
			}
			
			//scale 
			private function scaleBitmapData(bmpData:BitmapData, scaleX:Number, scaleY:Number):BitmapData
			{
				var matrix:Matrix = new Matrix();
				matrix.scale(scaleX, scaleY);
				var _bmpData:BitmapData = new BitmapData(scaleX * bmpData.width, scaleY * bmpData.height, true, 0);
				_bmpData.draw(bmpData, matrix);
				return _bmpData;
			}
			
			protected function fileList_changeHandler(event:IndexChangeEvent):void
			{
				//startImage.source = (fileList.selectedItem as File).nativePath;
			}
			
			public function getTitle():String
			{
				return title
			}
			
			public function getURL():String
			{	
				if(_dragedImage){
					return _extendName;
				}else
				{
					return "";
				}
			}
			
			//只在编辑的时候有用，用于添加图片到image里面。
			public function setText($tex:String):void
			{
				ImageUrl=$tex;
				startImage.source=ImageUrl;
				//trace("in DragImage:",ImageUrl)
			}	

			public function get dragedImage():Boolean
			{
				return _dragedImage;
			}
			
			public function dispose():void
			{
				imgByteArray.clear();
				removeEventListener(NativeDragEvent.NATIVE_DRAG_ENTER, dragEnter);
				removeEventListener(NativeDragEvent.NATIVE_DRAG_DROP, dragDrop);		
				//save jpg
				removeEventListener(ElementEvent.CREATE_JPG,createJpg);
			}
		]]>
	</fx:Script>
	
	<!--<mx:nativeDragEnter>
		// Event handler for when something is dragged over to the WindowedApplication
		// Only allow files to be dragged in
		if (event.clipboard.hasFormat(ClipboardFormats.FILE_LIST_FORMAT))
		{
		var files:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
		
		// only allow a single file to be dragged in
		if (files.length == 1)
		{
		DragManager.acceptDragDrop(event.currentTarget as IUIComponent);
		setStyle("backgroundColor", 0xccccff);
		}
		}
	</mx:nativeDragEnter>
	
	<mx:nativeDragExit>
		// Event handler for when the drag leaves the WindowedApplication
		setStyle("backgroundColor", 0x323232);
	</mx:nativeDragExit>
	
	<mx:nativeDragDrop>
		// Event handler for when a dragged item is dropped on the WindowedApplication
		var arr:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
		startImage.source = (arr[0] as File).url;
	</mx:nativeDragDrop>-->
	
	
	<mx:ViewStack id="startVS" width="100%" height="100%" creationPolicy="all">
		<mx:Canvas width="100%" height="100%">
			<mx:Text id="note" verticalCenter="0" horizontalCenter="0" creationComplete="initTex()">
				<mx:htmlText><![CDATA[<font size="20"><b>拖动照片到这里</b></font>]]></mx:htmlText>
			</mx:Text>
		</mx:Canvas>
		<mx:Canvas width="100%" height="100%">
			<mx:Image id="startImage" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" complete="startVS.selectedIndex = 1;saveJpg(event)"/>
		</mx:Canvas>
	</mx:ViewStack>
	
</s:Panel>
