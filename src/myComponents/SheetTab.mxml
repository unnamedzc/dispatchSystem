<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"  width="100%" height="100%" fontSize="20">
	<!--<fx:Declarations>
		<fx:Component id="myDF">
			<s:HGroup>
				<fx:Script>
					<![CDATA[
						
					]]>
				</fx:Script>
				<mx:DateField id="dateField1" yearNavigationEnabled="true"
							 color="0x000000"/>
			</s:HGroup>
		</fx:Component>
	</fx:Declarations>-->	
	<fx:Script>
		<![CDATA[		
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			
			import myElements.MyDateField;
			
			import spark.components.Scroller;
			//for component;
			private var _myXML:XML;
			
			private var _rowNum:uint;
			//for data
			public var _tabData:XML=<tab></tab>;
			private var _rowData:XML;
			private var _testXML:XML;
			private var _columns:Array=new Array()
			private var dataArr:ArrayCollection=new ArrayCollection();
			private var _tempStr:String;
			//[Bindable]
			//public var ac:ArrayCollection = new ArrayCollection(
				//[{dateString:"11/12/2006", contact:"ABD DEF", dt: new Date(2004,11,2)}])
			private function assignScroll():void
			{
				var _myScro:Scroller=new Scroller();
				_myScro.viewport=MainSheet;
				//_myScro._isSheet=1;
				this.addElement(_myScro);
				_myScro.percentWidth=110;
				_myScro.percentHeight=100;
			}
			private function creatData():void
			{	
				//initData
				//test
				//dg.editable=false;
				//for data
				var _testStr:String;
				_rowNum=_myXML.e.length();				
				for(var i:uint;i<_rowNum;++i)
				{					
					var GridName:DataGridColumn=new DataGridColumn();
					GridName.headerText=_myXML.e[i].@name;
					
					GridName.dataField=i.toString();
				 	if(_myXML.e[i].@name=="时间")
					{						
						var myDateField:ClassFactory = new ClassFactory(MyDateField);							
						GridName.itemRenderer=myDateField;	
						GridName.rendererIsEditor=true;
						GridName.editorDataField="selectedDate";
						GridName.width=String(_myXML.e[i].@name).length*60;
					}else if(_myXML.e[i].@name=="行")
					{
						GridName.width=String(_myXML.e[i].@name).length*30;
						GridName.editable=false;						
					}else
					{ 
						GridName.width=String(_myXML.e[i].@name).length*30;
					}
					_columns.push(GridName);
				}
				dg.columns=_columns;
				
				//get data
				if(_testXML!=null){
					//_testStr=_testXML.elements("*")[i]
					
					var line:uint=_testXML.rowData.length();
					for(i=0;i<line;i++)
					{
						//trace("data:",_testXML.rowData[i].elements("*")[0])
						var _tempObj:Object={};
						var rowLen:uint=_testXML.rowData[i].length;
						for(var j:uint=0;j<_rowNum;++j)
						{
							_testStr=_testXML.rowData[i].elements("*")[j]
							if(j==1){
								/*
								如果添加了列，请在这里修改 date
								*/
								//将xml中的string型装换为date
								_tempObj[j.toString()]=new Date(Date.parse(_testStr));
							}else
							{								
								if(_testStr!=""){
									_tempObj[j.toString()]=_testStr;
								}else
								{
									_tempObj[j.toString()]="";
								}
								
							}
						}
						dataArr.addItem(_tempObj);
					}
				}
				
				//==============dataProvider set date in dg
				dg.dataProvider=dataArr;
			}
			
			public function get value():Object
			{				
				return _tempStr;
			}
			public function set myXML(value:XML):void
			{
				_myXML = value;
			}
			
			//增加一行空数据
			private function addRow():void
			{
				var _len:uint=dataArr.length;				
				/* if(_len>0)
				{
					var _prevLen:uint;
					//for(var i:uint=1;i<_rowNum;++i)
					//{
					//	trace(dataArr[_len-1][i.toString()])
						if(dataArr[_len-1]["1"]==undefined)
						{
							//_prevLen++;
							Alert.buttonHeight=30;						
							Alert.show('请填写时间!', '无法添加新数据');						
							return;
						} 
				//	}
					//if(_prevLen==_rowNum)
					//{
						//Alert.buttonHeight=30;						
						//Alert.show('请在最新添加的数据行中至少填写一项数据!', '无法添加新数据');						
						//return;
					//}
				}	 */
				trace("dataArr.length:",_len)
				var item:Object={"0":_len+1,"1":new Date()};
				dataArr.addItem(item);
				dg.dataProvider=dataArr;				
			}	
			//删除一行数据
			private function removeRow():void
			{
				if(dg.selectedItem)
				{
					var item4:Object=dg.selectedItem;
					var index:int=dataArr.getItemIndex(item4);
					dataArr.removeItemAt(index);
					for(var i:uint=index;i<dataArr.length;++i)
					{
						dataArr[i]["0"]=i+1;
					}
					dg.dataProvider=dataArr;
				}
			}
			//			
			private function showSheetXML($mode:uint=0):void
			{
				var _len:uint=dataArr.length;
					
				var _tab:String;
				var _info:String;
				for(var i:uint;i<_len;++i)
				{
					_rowData=<rowData></rowData>;
					for(var j:uint=0;j<_rowNum;++j)
					{
						//trace(dataArr[i][j.toString()]);
						_tab=_myXML.e[j].@name;
						if(dataArr[i][j.toString()]!=undefined)
						{
							_info=	dataArr[i][j.toString()];
						}else
						{
							_info="";
						}
						if($mode==0)
						{//add mode
							_rowData.appendChild(<{_tab}>{_info}</{_tab}>)
						}else
						{//edit mode
							_rowData.replace(j,<{_tab}>{_info}</{_tab}>)
						}
					}
					if($mode==0)
					{//add mode
						_tabData.appendChild(_rowData);
					}else
					{//edit mode
						_tabData.replace(i,_rowData)
					}
				}
				//trace("replaced SheetXML:",_tabData)
				//trace(dataArr);
			}
			
			public function setData($mode:uint=0):void
			{
				showSheetXML($mode);				
			}
			
			public function setDataProvide($data:XML=null):void
			{
				_testXML=XML($data);
				//trace("sheetData:",$data)
			}
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"/>
	</s:layout>	
	
	<s:VGroup>
		<s:HGroup>
			<s:Button label="添加数据行" click="addRow()"/>
			<s:Button label="删除数据行 " click="removeRow()"/>
			<s:Button label="test" click="showSheetXML()"/>
		</s:HGroup>
		<s:Group id="MainSheet" width="100%" height="100%" creationComplete="assignScroll()">
			<mx:DataGrid id="dg" draggableColumns="false" fontSize="15" editable="true" height="100%" creationComplete="creatData()"/>
				
		</s:Group>	
	</s:VGroup>
</s:NavigatorContent>
