<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" title="添加数据" addedToStage="onAdd()" creationComplete="onCreated()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import Values.GlobalValue;
			
			import com.jeff.dataControler.DataManager;
			import com.jeff.dataView.dataElement.MyHGroupLabel;
			
			import com.jeff.myEvent.XMLEvent;
			
			import mx.controls.Alert;
			import mx.core.IVisualElementContainer;
			import mx.managers.PopUpManager;
			public var _editMode:uint;//0:增加数据，1：修改数据，2：查看数据, 3: test
			private var _tempDataXML:XML;

			
			private var _tabVec:Vector.<IVisualElementContainer>=new Vector.<IVisualElementContainer>();
			/*
			按确定键后，增加数据或者确定修改的数据。
			
			*/
			private function changeData():void
			{
				
				//如果姓名为空，return；
				//trace("teab:",MyHGroupLabel(TableTab(_tabVec[0])._eleVec[0]).getText())
				 if(MyHGroupLabel(TableTab(_tabVec[0])._eleVec[0]).getText()=="")
				{
					Alert.buttonHeight=30;						
					Alert.show('请至少填写司机的姓名!', '无法添加新数据');
					return;
				} 
				/* 				
				add mode to combine data	
				edit mode to replace data
				*/
				
				if(_editMode==0)//add
				{
					DataManager.getInstance()._empData.@id=GlobalValue._empId++;
					for(var i:uint=0;i<_tabVec.length;++i)
					{
						if(_tabVec[i] is TableTab)
						{
							TableTab(_tabVec[i]).setData();
							DataManager.getInstance().combineData(TableTab(_tabVec[i])._tabData);
						}
						else if(_tabVec[i] is SheetTab)
						{
							SheetTab(_tabVec[i]).setData();				
							DataManager.getInstance().combineData(SheetTab(_tabVec[i])._tabData);
						}
					}				
					DataManager.getInstance()._wholeData.appendChild(DataManager.getInstance()._empData);
					DataManager.getInstance().resetEmpXML();
					//trace("in TitleWin:",DataManager.getInstance()._wholeData);
					this.dispatchEvent(new XMLEvent(XMLEvent.DATA_COMBINED));
				}else{
					//edit mode here extend the setData()
					/* 
					var xml:XML = 
					<body>
					<p>Hello</p>
					<p>World</p>
					<hr/>
					</body>;
					
					xml.replace(1, <p>Bob</p>);
					trace(xml);				
					*/
					DataManager.getInstance()._empData.@id=GlobalValue._selectedMainSheetID
					for(i=0;i<_tabVec.length;++i)
					{
						if(_tabVec[i] is TableTab)
						{
							TableTab(_tabVec[i]).setData(_editMode);
							//tobe debug							
							DataManager.getInstance().replaceData(i,TableTab(_tabVec[i])._tabData);
						}
						else if(_tabVec[i] is SheetTab)
						{
							// sheets.setData();
							SheetTab(_tabVec[i]).setData(_editMode);		
							//tobe debug							
							DataManager.getInstance().replaceData(i,SheetTab(_tabVec[i])._tabData);
						}
					}
					//trace("_editMode is:",_editMode,GlobalValue._empId);
					DataManager.getInstance()._wholeData.replace(GlobalValue._selectedMainSheetID,DataManager.getInstance()._empData);
					//trace("whole data is:",DataManager.getInstance()._wholeData)
					DataManager.getInstance().resetEmpXML();
					this.dispatchEvent(new XMLEvent(XMLEvent.DATA_COMBINED));					
				}		
				
				PopUpManager.removePopUp(this);
			}
			private function onAdd():void
			{
				//trace("titleWin: editable: ",_editable)				
			}
			private function onCreated():void
			{
				
				if(_editMode>0){
					//窗口为可编辑
					_tempDataXML=new XML();
					_tempDataXML=XML(DataManager.getInstance()._wholeData.emp.(@id==GlobalValue._selectedMainSheetID));
					
				}			
				//creat the xml according to the assigned XML not data
				var _len:uint=GlobalValue._xmlData.tab.length();
				var _tempXml:XML;
				//一个标签，tab标签数量
				var _tabNum:uint=0;
				for(var i:uint=0;i<_len;++i)
				{					
					_tempXml=XML(GlobalValue._xmlData.tab[i].elements);	
					if(uint(GlobalValue._xmlData.tab[i].@isTable)!=0)
					{
						//输入框形式
						var myT:TableTab=new TableTab();
						myT._tabID=i;
						_tabVec.push(myT);
						myT.myXML=_tempXml;
						myT.layoutStyle=uint(GlobalValue._xmlData.tab[i].@isTable);
						tn.addElement(myT);	
						myT.label=GlobalValue._xmlData.tab[i].tabName;
						if(_editMode>0){
							if(i==0){
								myT.setDataProvide(XML(_tempDataXML.mainTab));
							}else
							{
								myT.setDataProvide(XML(_tempDataXML.tab[i-1]));
							}
						}
					}else
					{
						//列表形式
						var myS:SheetTab=new SheetTab();
						_tabVec.push(myS);
						myS.myXML=_tempXml;
						tn.addItem(myS);
						if(_editMode>0){
							myS.setDataProvide(XML(_tempDataXML.tab[i-1]));
						}
						myS.label=GlobalValue._xmlData.tab[i].tabName;
					}
				}				
			}
			private function onChangeTab(e:Event):void
			{
				trace("changeTab:",e.target.name);
			}
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"/>
	</s:layout>
	<s:VGroup width="100%" height="100%">
		<s:HGroup>			
			<s:Button label="确定" click="changeData();System.gc()"/>
			<s:Button label="取消" click="PopUpManager.removePopUp(this);System.gc()"/>
		</s:HGroup>
		<mx:TabNavigator id="tn" height="100%" width="100%" color="0x323232"/>
	</s:VGroup>
</s:TitleWindow>